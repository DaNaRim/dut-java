package sem1.lesson4.practice;

import java.math.BigInteger;

public class CalcFunctionAndDisplayInTable {

    public static void main(String[] args) {

        int width = 16;

        // width example: %-16s
        System.out.printf("%-" + width + "s", "n");
        System.out.printf("%-" + width + "s", "log(n)");
        System.out.printf("%-" + width + "s", "n * log(n)");
        System.out.printf("%-" + width + "s", "n ^ 2");
        System.out.printf("%-" + width + "s", "n ^ 3");
        System.out.printf("%-" + width + "s%n", "2 ^ n");

        for (int i = 16; i <= 2048; i *= 2) {
            System.out.printf("%-" + width + "d", i);
            System.out.printf("%-" + width + "f", Math.log(i));
            System.out.printf("%-" + width + "f", i * Math.log(i));
            System.out.printf("%-" + width + "d", i * i);
            System.out.printf("%-" + width + "d", (long) i * i * i);
            System.out.printf("%-" + width + "s%n", new BigInteger("2").pow(i));
//            System.out.printf("%-16d%n", (long) Math.pow(2, i));
        }

        /*
        n               log(n)          n * log(n)      n ^ 2           n ^ 3           2 ^ n
        16              2,772589        44,361420       256             4096            65536
        32              3,465736        110,903549      1024            32768           4294967296
        64              4,158883        266,168517      4096            262144          18446744073709551616
        128             4,852030        621,059874      16384           2097152         340282366920938463463374607431768211456
        256             5,545177        1419,565426     65536           16777216        115792089237316195423570985008687907853269984665640564039457584007913129639936
        512             6,238325        3194,022208     262144          134217728       13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096
        1024            6,931472        7097,827129     1048576         1073741824      179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216
        2048            7,624619        15615,219684    4194304         8589934592      32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230656
         */
    }
}
